import { Col, Container, Row } from "react-bootstrap";
import SectionTitle from "../SectionTitle/SectionTitle";
import BasketItem from "./BasketItem";
import { useContext, useRef } from "react";
import { MyContext } from "../../utils/Context";
import PrimaryButton from "../PrimaryButton/PrimaryButton";
import Links from "../Links/Links";

const BasketSection = () => {
  const {
    basket,
    basketTotalPrice,
    discount,
    delivery,
    promoCodes,
    setBasket,
  } = useContext(MyContext);

  const promoCodeInput = useRef();

  return (
    <section className="basket">
      <Container>
        <Links pages={[{ name: "Корзина", path: "/basket" }]} />
        <Row className="basket__row">
          {basket.length ? (
            <>
              <SectionTitle style={{ marginBottom: "60px" }}>
                Ваша корзина
              </SectionTitle>
              <Col xxl={7}>
                <div className="basket__wrapper">
                  {basket.map((item) => (
                    <BasketItem key={item.id} {...item} />
                  ))}
                  <div className="basket__info">
                    Общая стоимость Вашей покупки без учета доставки составит:
                    <em>{basketTotalPrice} руб.</em>
                  </div>
                </div>
              </Col>
              <Col xxl={5}>
                <div className="basket__total">
                  <div className="basket__total-info">
                    <h6 className="basket__total-title">Итого</h6>
                    <div className="basket__total-cost basket__total-text">
                      Стоимость товаров <span>{basketTotalPrice} руб.</span>
                    </div>
                    <div className="basket__total-discount basket__total-text">
                      Скидка <span>{discount} руб.</span>
                    </div>
                    <div className="basket__total-delivery basket__total-text">
                      Доставка <span>{delivery} руб.</span>
                    </div>
                  </div>
                  <div className="basket__total-price basket__total-text">
                    К оплате <span>{basketTotalPrice + delivery} руб.</span>
                  </div>
                  <div className="basket__total-promocode">
                    <label
                      htmlFor="promoCodeInput"
                      className="basket__total-label"
                    >
                      Промокод:
                    </label>
                    <input
                      type="text"
                      id="promoCodeInput"
                      placeholder="Введите промкод"
                      ref={promoCodeInput}
                    />
                    <PrimaryButton
                      className="basket__total-confirm-btn"
                      onClick={() => {
                        const inputValue = promoCodeInput.current.value;
                        if (promoCodes.includes(inputValue)) {
                          alert("Промокод активирован");
                          promoCodeInput.current.value = "";
                        } else {
                          alert("Неверный промокод");
                        }
                      }}
                    >
                      Применить
                    </PrimaryButton>
                    <PrimaryButton
                      className="basket__total-checkout-btn"
                      onClick={() => setBasket([])}
                    >
                      Оформить заказ
                    </PrimaryButton>
                  </div>
                </div>
              </Col>
            </>
          ) : (
            <div className="basket__empty">
              Ваша корзина пуста
              <svg
                width="81"
                height="63"
                viewBox="0 0 81 63"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M80.9998 38.5416C80.9998 52.0312 62.894 62.9514 40.5529 62.9514C18.1058 62.8443 0 51.9241 0 38.5416C0 37.7921 0.105882 37.0427 0.211764 36.4003C2.01176 23.9813 19.3764 14.2388 40.5529 14.2388C61.7293 14.2388 79.094 23.9813 80.894 36.5074C80.894 37.0427 80.9998 37.7921 80.9998 38.5416Z"
                  fill="#D4CAF0"
                />
                <path
                  d="M80.7915 36.4007C80.1562 39.3984 77.8268 41.8608 75.8151 45.0727C73.8033 48.2845 70.9445 50.8539 66.7092 50.8539C64.5916 50.8539 62.2622 51.7104 60.4622 53.1022C57.6034 55.3505 53.6857 55.9929 50.1916 55.2434C47.121 54.6011 43.6269 54.8152 40.4505 55.8858C35.2622 57.4917 30.8152 56.9564 26.474 54.6011C22.5564 52.4599 18.427 51.2822 14.6152 50.961C9.00347 50.5328 5.82701 48.1774 3.70937 43.6809C2.43878 40.8973 0.638786 38.8631 0.109375 36.4007C1.90937 23.9817 19.274 14.2392 40.4505 14.2392C61.6269 14.1321 78.9915 23.8746 80.7915 36.4007Z"
                  fill="#C4BBDF"
                />
                <path
                  d="M80.9998 31.6898C80.9998 35.437 78.2469 38.1135 75.9175 41.8606C73.9057 45.0724 71.0469 47.6419 66.8116 47.6419C64.694 47.6419 62.3646 48.4984 60.5646 49.8902C57.5999 52.1384 53.7881 52.7808 50.294 52.0314C47.2234 51.389 43.7293 51.6031 40.5529 52.6737C35.3646 54.2797 30.9176 53.7444 26.5764 51.389C22.6588 49.2478 18.5294 48.0701 14.7176 47.856C8.99998 47.4278 5.82352 44.9654 3.70587 40.4688C2.22352 37.257 0 34.7946 0 31.6898C0 20.1273 18.1058 10.813 40.447 10.813C62.7881 10.813 80.9998 20.1273 80.9998 31.6898Z"
                  fill="#FFE37E"
                />
                <path
                  d="M80.9998 24.4098C80.9998 37.8995 62.894 48.7126 40.5529 48.7126C18.1058 48.7126 0 37.7924 0 24.4098C0 23.1251 0.211764 21.8404 0.529411 20.5557C3.59999 8.88604 20.3294 0 40.447 0C60.5646 0 77.3998 8.88604 80.4704 20.5557C80.7881 21.7333 80.9998 23.0181 80.9998 24.4098Z"
                  fill="#C4BBDF"
                />
                <path
                  d="M80.4645 20.5557C77.3939 32.1182 60.6645 41.0043 40.441 41.0043C20.2175 41.0043 3.59402 32.1182 0.523437 20.5557C3.59402 8.88604 20.3234 0 40.441 0C60.5587 0 77.3939 8.88604 80.4645 20.5557Z"
                  fill="#D4CAF0"
                />
                <path
                  d="M24.2157 12.5039C23.4867 12.5039 22.895 11.8908 22.895 11.1354C22.895 10.3814 23.4827 9.76971 24.2105 9.76697C24.4165 9.76423 28.9241 9.64928 32.4054 4.84049C32.8426 4.23836 33.6693 4.11246 34.2544 4.56679C34.8382 5.01976 34.9557 5.87779 34.5186 6.48265C30.2091 12.4355 24.4587 12.5039 24.2157 12.5039ZM55.9127 12.5039C55.6696 12.5039 49.9206 12.4355 45.6112 6.48265C45.1727 5.87779 45.2915 5.01976 45.8753 4.56679C46.4577 4.11109 47.2845 4.23562 47.723 4.84049C51.2109 9.65886 55.7277 9.7656 55.9193 9.76697C56.6456 9.77518 57.232 10.391 57.2281 11.1423C57.2254 11.8963 56.639 12.5039 55.9127 12.5039ZM24.2171 24.8201C23.8156 24.8201 23.4194 24.6313 23.1592 24.2727C22.7207 23.6692 22.8396 22.8112 23.4233 22.3582C23.6122 22.2118 27.3207 19.3709 32.4781 18.3445C29.2093 16.6463 25.5813 16.6093 25.5351 16.6093C24.8061 16.6066 24.2157 15.9935 24.2171 15.2381C24.2171 14.4841 24.8074 13.8724 25.5364 13.8724C25.8283 13.8724 32.7369 13.9244 37.0358 18.3787C37.4135 18.7701 37.5271 19.3586 37.3224 19.8704C37.1177 20.3822 36.6356 20.7147 36.1021 20.7147C30.0097 20.7147 25.057 24.5081 25.0082 24.5464C24.7704 24.7312 24.4918 24.8201 24.2171 24.8201ZM55.9113 24.8187C55.6366 24.8187 55.3593 24.7312 55.1215 24.5478C55.0714 24.5081 50.0883 20.7147 44.0263 20.7147C43.4927 20.7147 43.0094 20.3822 42.806 19.8704C42.6013 19.3586 42.7148 18.7701 43.0926 18.3787C47.3928 13.9244 54.3001 13.8724 54.5919 13.8724C55.321 13.8724 55.91 14.4841 55.9113 15.2381C55.9127 15.9935 55.3223 16.6066 54.5946 16.6093C54.547 16.6093 50.9191 16.6463 47.6503 18.3445C52.8077 19.3709 56.5162 22.2104 56.7038 22.3582C57.2862 22.8112 57.405 23.6665 56.9692 24.2714C56.7104 24.6285 56.3141 24.8187 55.9113 24.8187ZM40.0642 35.7679C39.6627 35.7679 39.2837 35.579 39.0327 35.2547L34.8144 29.7918L31.8758 33.852C31.646 34.1695 31.2947 34.3679 30.913 34.3953C30.53 34.424 30.1549 34.279 29.8855 33.9984L28.5648 32.63C28.0484 32.0949 28.0484 31.23 28.5648 30.6949C29.0812 30.1599 29.9159 30.1599 30.4323 30.6949L30.6766 30.9481L33.7248 26.736C33.9705 26.3966 34.3521 26.1941 34.7602 26.1886C35.1499 26.1749 35.5566 26.3706 35.8115 26.7018L40.0642 32.2085L44.3155 26.7018C44.5704 26.372 44.9548 26.1886 45.3681 26.1886C45.7776 26.1954 46.1592 26.3966 46.4036 26.736L49.4531 30.9467L49.6974 30.6936C50.2138 30.1585 51.0485 30.1585 51.5649 30.6936C52.0813 31.2286 52.0813 32.0935 51.5649 32.6286L50.2442 33.9971C49.9734 34.2776 49.6116 34.4268 49.2167 34.3939C48.835 34.3652 48.4837 34.1681 48.2539 33.8506L45.314 29.7904L41.097 35.2533C40.8447 35.579 40.4657 35.7679 40.0642 35.7679Z"
                  fill="#664500"
                />
              </svg>
            </div>
          )}
        </Row>
      </Container>
    </section>
  );
};

export default BasketSection;
